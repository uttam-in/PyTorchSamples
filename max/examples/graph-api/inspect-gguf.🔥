# ===----------------------------------------------------------------------=== #
# Copyright (c) 2024, Modular Inc. All rights reserved.
#
# Licensed under the Apache License v2.0 with LLVM Exceptions:
# https://llvm.org/LICENSE.txt
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===----------------------------------------------------------------------=== #

"""A tool to print metadata and tensor info from GGUF files."""

from pipelines.weights.gguf import GGUFFile
from pathlib import Path
from python import Python
from sys import argv, exit


def main():
    folder = Path(".cache")
    args = argv()
    if len(args) > 1:
        folder = args[1]

    print("Searching for GGUF models in:", folder)
    print("(Change directory by passing in an argument)\n")
    ggufs = List[Path]()
    for p in Path.listdir(folder):
        if p[].suffix() == ".gguf":
            ggufs.append(p[])
            print(len(ggufs), ": ", p[], sep="")

    if not ggufs:
        print('No GGUF files in folder "', folder, '"', sep="")
        return

    py = Python.import_module("builtins")
    inp = py.input("\nSelect GGUF to inspect: ")
    inp_res = int(str(inp))
    while inp_res > len(ggufs) or inp_res == 0:
        print("Enter a number between 1 and", len(ggufs))
        inp = py.input("\nSelect GGUF to inspect: ")
        inp_res = int(str(inp))

    file = folder / str(ggufs[inp_res - 1])
    print("inspecting:", file, end="\n\n")
    print(GGUFFile(file))
